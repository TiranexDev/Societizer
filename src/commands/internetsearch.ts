import { Command } from '../typings/'
// @ts-ignore
import { search } from 'googlethis'
import { search as ddSearch, SafeSearchType } from 'duck-duck-scrape'

export let command: Command = {
    name: 'internetsearch',
    category: '–£—Ç–∏–ª–∏—Ç—ã',
    emoji: 'üîç',
    description: '–ö–æ–º–∞–Ω–¥–∞ –¥–ª—è –ø–æ–∏—Å–∫–∞ —á–µ–≥–æ-—Ç–æ –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ',
    options: [
        {
            name: '–ø–æ–∏—Å–∫–æ–≤–∏–∫',
            description:
                '–ø–æ–∏—Å–∫–æ–≤–∏–∫ —Å –ø–æ–º–æ—â—å—é –∫–æ—Ç–æ—Ä–æ–≥–æ –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ–∏—Å–∫–∞—Ç—å –∑–∞–ø—Ä–æ—Å',
            type: 3,
            choices: [
                {
                    name: 'Google',
                    value: 'google',
                },
                {
                    name: 'DuckDuckGo',
                    value: 'duckduckgo',
                },
            ],
            required: true,
        },
        {
            name: '–∑–∞–ø—Ä–æ—Å',
            description: '–ó–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ–∏—Å–∫–∞',
            type: 3,
            required: true,
        },
        {
            name: '–∞–Ω–æ–Ω–∏–º–Ω–æ',
            description: '–ê–Ω–æ–Ω–∏–º–Ω—ã–π –ø–æ–∏—Å–∫',
            type: 5,
            required: false,
        },
    ],
    run: async (interaction, _client, f) => {
        let anon = interaction.options.getBoolean('–∞–Ω–æ–Ω–∏–º–Ω–æ', false) || false

        let arr: string[] = []

        let ggl = interaction.options.getString('–ø–æ–∏—Å–∫–æ–≤–∏–∫', true)
        let query = interaction.options.getString('–∑–∞–ø—Ä–æ—Å', true)

        if (ggl == 'google') {
            search(query, { safe: true, additional_params: { hl: 'ru' } }).then(
                (res: { results: [{ title: string; url: string }] }) => {
                    res.results.map((r) => {
                        if (arr.length >= 6) return
                        arr.push(`[${r.title}](${r.url})`)
                    })

                    if (arr.length == 0)
                        return interaction.reply({
                            embeds: [
                                f.aembed(
                                    `–û—à–∏–±–∫–∞`,
                                    `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ Google –Ω–µ –¥–∞–ª–∏ –Ω–∏–∫–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã`,
                                    f.colors.error
                                ),
                            ],
                            ephemeral: anon,
                        })

                    let resultsEmbed = f.aembed(
                        `üîç | –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ü–æ–∏—Å–∫–∞ –≤ Google`,
                        arr.join('\n'),
                        f.colors.default,
                        'https://www.raqnbeauty.com/wp-content/uploads/2020/06/google-logo-png-google-icon-logo-png-transparent-svg-vector-bie-supply-14.png'
                    )

                    return interaction.reply({
                        embeds: [resultsEmbed],
                        ephemeral: anon,
                    })
                }
            )
        } else if (ggl == 'duckduckgo') {
            ddSearch(query, {
                safeSearch: SafeSearchType.STRICT,
                locale: 'ru-ru',
            }).then((res) => {
                res.results.map((r) => {
                    if (arr.length >= 6) return
                    arr.push(`[${r.title}](${r.url})`)
                })

                if (arr.length == 0)
                    return interaction.reply({
                        embeds: [
                            f.aembed(
                                `–û—à–∏–±–∫–∞`,
                                `–†–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ DuckDuckGo –Ω–µ –¥–∞–ª–∏ –Ω–∏–∫–∞–∫–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã`,
                                f.colors.error
                            ),
                        ],
                        ephemeral: anon,
                    })

                let resultsEmbed = f.aembed(
                    `üîç | –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ü–æ–∏—Å–∫–∞ –≤ DuckDuckGo`,
                    arr.join('\n'),
                    f.colors.default,
                    'https://cdn.freebiesupply.com/logos/large/2x/duckduckgo-3-logo-png-transparent.png'
                )

                return interaction.reply({
                    embeds: [resultsEmbed],
                    ephemeral: anon,
                })
            })
        } else
            interaction.reply({
                content: '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –ø–æ–∏—Å–∫–æ–≤–∏–∫',
                ephemeral: true,
            })
    },
}

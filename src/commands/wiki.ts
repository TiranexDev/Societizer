import { Command } from "../typings/";
import wiki from "wikipedia";

wiki.setLang("ru");

export let command: Command = {
  name: "wiki",
  emoji: "üîç",
  category: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è",
  description: "–ò—Å–∫–∞—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –¥–∞–Ω–Ω—ã—Ö –∫–æ—Ç–æ—Ä–∞—è –µ—Å—Ç—å –Ω–∞ wikipedia.org",
  options: [
    {
      name: "–∑–∞–ø—Ä–æ—Å",
      description: "–ó–∞–ø—Ä–æ—Å –∫–æ—Ç–æ—Ä—ã–π –≤—ã —Ö–æ—Ç–∏—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å",
      type: 3,
      required: true,
    },
  ],
  run: async (interaction, client, f) => {
    let query = interaction.options.getString("–∑–∞–ø—Ä–æ—Å", true);
    wiki
      .page(query)
      .then(async (result) => {
        let summary = await result.summary();

        return interaction.reply({
          embeds: [
            new f.embed()
              .setTitle(`üîç | –í–∞—à –∑–∞–ø—Ä–æ—Å wikipedia: ${query}`)
              .setURL(result.canonicalurl)
              .setDescription(summary.description)
              .setColor(f.colors.default)
              .setThumbnail(summary.originalimage.source)
              .setFooter({
                text: `–ò—Å—Ç–æ—á–Ω–∏–∫: wikipedia.org: ${summary.titles.display}`,
                iconURL: client.user!.displayAvatarURL(),
              })
              .setColor(f.colors.default)
              .setTimestamp(),
          ],
          ephemeral: true,
        });
      })
      .catch(() => {
        return interaction.reply({
          embeds: [
            f.aembed(
              `–æ—à–∏–±–∫–∞`,
              `–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤–∞—à –∑–∞–ø—Ä–æ—Å "${query}" –≤ –≤–∏–∫–∏–ø–µ–¥–∏–∏`,
              f.colors.error
            ),
          ],
          ephemeral: true,
        });
      });
  },
};

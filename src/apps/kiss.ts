import { App } from '../typings/'

export let app: App = {
    name: '–ü–æ—Ü–µ–ª—É–π',
    type: 3,
    run: async (interaction, client, f) => {
        let user = await (await interaction.channel?.messages.fetch(
            interaction.targetId
        ))!.author

        if (user!.id == client.user!.id)
            return interaction.reply({
                embeds: [
                    f.aembed(
                        `üíã | –ü–æ—Ü–µ–ª—É–π`,
                        `–°–ø–∞—Å–∏–±–æ —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å –º–µ–Ω—è, –Ω–æ —è –Ω–µ –º–æ–≥—É —ç—Ç–æ —Å–¥–µ–ª–∞—Ç—å, –µ—Å–ª–∏ –º–µ–Ω—è —Å–ø–∞–ª—è—Ç, —Ç–æ –º–Ω–µ –ø–∏–∑-`,
                        f.colors.error
                    ),
                ],
                ephemeral: true,
            })

        if (user!.id == interaction.user!.id)
            return interaction.reply({
                embeds: [
                    f.aembed(
                        `üíã | –ü–æ—Ü–µ–ª—É–π`,
                        `–°–µ–±—è –ø–æ—Ü–µ–ª–æ–≤–∞—Ç—å, –Ω—É...`,
                        f.colors.error
                    ),
                ],
                ephemeral: true,
            })

        return interaction.reply({
            embeds: [
                f.aembed(
                    `üíã | –ü–æ—Ü–µ–ª—É–π ${
                        user!.bot || user!.system ? '... –±–æ—Ç–∞? –û–∫...' : ''
                    }`,
                    `<@${interaction.user.id}> –ø–æ—Ü–µ–ª–æ–≤–∞–ª ${
                        user!.bot || user!.system ? '**–±–æ—Ç–∞**' : `–ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è`
                    } <@${user!.id}>`,
                    f.colors.default
                ),
            ],
        })
    },
}
